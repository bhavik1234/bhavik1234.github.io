{"version":3,"sources":["D:/Chatbots/angular-chatbot/src/$_gendir lazy","D:/Chatbots/angular-chatbot/src/app/app.component.css","D:/Chatbots/angular-chatbot/src/app/app.component.html","D:/Chatbots/angular-chatbot/src/app/app.component.ts","D:/Chatbots/angular-chatbot/src/app/app.module.ts","D:/Chatbots/angular-chatbot/src/app/chat/chat-dialog/chat-dialog.component.css","D:/Chatbots/angular-chatbot/src/app/chat/chat-dialog/chat-dialog.component.html","D:/Chatbots/angular-chatbot/src/app/chat/chat-dialog/chat-dialog.component.ts","D:/Chatbots/angular-chatbot/src/app/chat/chat.module.ts","D:/Chatbots/angular-chatbot/src/app/chat/chat.service.ts","D:/Chatbots/angular-chatbot/src/app/chat/speech.service.ts","D:/Chatbots/angular-chatbot/src/environments/environment.ts","D:/Chatbots/angular-chatbot/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA;AACA;;;AAGA;AACA,+BAAgC,kBAAkB,2BAA2B,OAAO,qBAAqB,yBAAyB,yBAAyB,uBAAuB,2BAA2B,OAAO,sBAAsB,sBAAsB,sBAAsB,OAAO,qBAAqB,wBAAwB,eAAe,oBAAoB,OAAO,gCAAgC,2BAA2B,OAAO;;AAEtb;;;AAGA;AACA,2C;;;;;;;ACXA,kT;;;;;;;;;;;;;;;;ACA0C;AAO1C,IAAa,YAAY;IALzB;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAAD,mBAAC;AAAD,CAAC;AAFY,YAAY;IALxB,wEAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,0EAAmC;QACnC,yEAAkC;KACnC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACM;AACC;AAGhD,uBAAuB;AAcvB,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAXrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;SACb;QACD,OAAO,EAAE;YACP,gFAAa;YACb,qEAAU;SACX;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;ACpBtB;AACA;;;AAGA;AACA,mCAAoC,4BAA4B,4BAA4B,2BAA2B,2BAA2B,0BAA0B,KAAK,iBAAiB,kCAAkC,oBAAoB,2BAA2B,0BAA0B,KAAK,mBAAmB,4CAA4C,uBAAuB,4BAA4B,KAAK,iEAAiE,sBAAsB,KAAK,gBAAgB,wBAAwB,gBAAgB,kBAAkB,oBAAoB,8BAA8B,qBAAqB,yBAAyB,KAAK,aAAa,gBAAgB,yBAAyB,KAAK,iBAAiB,uBAAuB,uBAAuB,qBAAqB,yBAAyB,KAAK,kBAAkB,oBAAoB,oBAAoB,KAAK,iBAAiB,sBAAsB,aAAa,kBAAkB,KAAK,4BAA4B,yBAAyB,KAAK;;AAEriC;;;AAGA;AACA,2C;;;;;;;ACXA,8HAA8H,cAAc,mBAAmB,qMAAqM,+DAA+D,mBAAmB,iBAAiB,0kCAA0kC,+DAA+D,iBAAiB,iBAAiB,8lB;;;;;;;;;;;;;;;;;;;;;;;ACArjD;AACN;AAEvB;AACkB;AAElD,uBAAuB;AAQvB,IAAa,mBAAmB;IAQ9B,6BAAmB,IAAiB,EAAU,aAA4B;QAAvD,SAAI,GAAJ,IAAI,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QACxE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IAED,sCAAQ,GAAR;QACE,iEAAiE;QACjE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;aAClD,IAAI,CAAC,CAAC,UAAC,GAAG,EAAE,GAAG,IAAK,UAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAf,CAAe,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC;IAC3C,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,kDAAoB,GAApB;QAAA,iBA0BC;QAzBC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAE9B,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;aACxB,SAAS;QACV,WAAW;QACX,UAAC,KAAK;YACJ,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC;YACjC,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC;QACD,SAAS;QACT,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;gBACtC,KAAI,CAAC,oBAAoB,EAAE,CAAC;YAC9B,CAAC;QACH,CAAC;QACD,aAAa;QACb;YACE,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAC5B,+BAA+B;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IACH,0BAAC;AAAD,CAAC;AAxDY,mBAAmB;IAN/B,wEAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,mGAA2C;QAC3C,kGAA0C;KAC3C,CAAC;yDAUyB,kEAAW,oBAAX,kEAAW,sDAAyB,sEAAa,oBAAb,sEAAa;GAR/D,mBAAmB,CAwD/B;AAxD+B;;;;;;;;;;;;;;;;;;;;;;;ACdS;AACM;AAC/C,yBAAyB;AACoB;AAC6B;AAC7B;AACI;AAcjD,IAAa,UAAU;IAAvB;IAA0B,CAAC;IAAD,iBAAC;AAAD,CAAC;AAAd,UAAU;IAXtB,uEAAQ,CAAC;QACR,OAAO,EAAE;YACP,qEAAY;YACZ,mEAAW;SAEZ;QACD,YAAY,EAAE,CAAC,+FAAmB,CAAC;QACnC,gCAAgC;QAChC,OAAO,EAAE,CAAC,+FAAmB,CAAC;QAC9B,SAAS,EAAE,CAAC,kEAAW,EAAE,sEAAa,CAAC;KACxC,CAAC;GACW,UAAU,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;ACpBoB;AAC3C,yBAAyB;AACoC;AACb;AAEO;AAGvD,yDAAyD;AACzD;IACE,iBAAmB,OAAe,EAAS,MAAc;QAAtC,YAAO,GAAP,OAAO,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAChE,cAAC;AAAD,CAAC;;AAGD,IAAa,WAAW;IAKtB;QAJS,UAAK,GAAG,8EAAW,CAAC,UAAU,CAAC,UAAU,CAAC;QAC1C,WAAM,GAAG,IAAI,sEAAW,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAC/D,iBAAY,GAAG,IAAI,qEAAe,CAAY,EAAE,CAAC,CAAC;IAElC,CAAC;IAEjB,6CAA6C;IAC7C,8BAAQ,GAAR,UAAS,GAAW;QAApB,iBAUC;QATC,IAAM,WAAW,GAAG,IAAI,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC;aAChC,IAAI,CAAC,aAAG;YACP,IAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC;YAC7C,IAAM,UAAU,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAC9C,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yBAAyB;IACzB,4BAAM,GAAN,UAAO,GAAY;QACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IACH,kBAAC;AAAD,CAAC;AAzBY,WAAW;IADvB,yEAAU,EAAE;;GACA,WAAW,CAyBvB;AAzBuB;;;;;;;;;;;;;;;;;;;;;;;;ACd2B;AACN;AACjB;AAQ5B,IAAa,aAAa;IAExB,uBAAoB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;IAAI,CAAC;IACrC,8BAAM,GAAN;QAAA,iBAwCC;QAtCC,MAAM,CAAC,2DAAU,CAAC,MAAM,CAAC,kBAAQ;YACvB,4DAAuB,CAA8B;YAC7D,KAAI,CAAC,iBAAiB,GAAG,IAAI,uBAAuB,EAAE,CAAC;YACvD,KAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC;YACzC,gDAAgD;YAChD,KAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,OAAO,CAAC;YACtC,KAAI,CAAC,iBAAiB,CAAC,eAAe,GAAG,CAAC,CAAC;YAE3C,KAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,gBAAM;gBACtC,IAAI,IAAI,GAAW,EAAE,CAAC;gBACtB,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;oBACnB,IAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;oBAChD,IAAI,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;oBACtC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;wBACnB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC;4BAC/B,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;wBACxD,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,GAAG,4CAAM,CAAC,UAAU,CAAC,CAAC;4BAC1B,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,GAAG,sCAAsC,CAAC,CAAC;wBACnF,CAAC;oBACH,CAAC;gBACH,CAAC;gBACD,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACZ,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;YAEF,KAAI,CAAC,iBAAiB,CAAC,OAAO,GAAG,eAAK;gBACpC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACxB,CAAC,CAAC;YAEF,KAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG;gBAC7B,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACtB,CAAC,CAAC;YAEF,KAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAmB,GAAnB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;QAChC,CAAC;IACH,CAAC;IAEH,oBAAC;AAAD,CAAC;AAnDY,aAAa;IADzB,yEAAU,EAAE;yDAGe,6DAAM,oBAAN,6DAAM;GAFrB,aAAa,CAmDzB;AAnDyB;;;;;;;;;;ACV1B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IAEjB,UAAU,EAAE;QACV,UAAU,EAAE,kCAAkC;KAC/C;CACF,CAAC;;;;;;;;;;;;;;ACX6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Chatbots/angular-chatbot/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\r\\n    margin: 0;\\r\\n    font-family: Arial;\\r\\n  }\\r\\n  \\r\\n  .header {\\r\\n    padding: 5px 8px;\\r\\n    background: #555;\\r\\n    color: #f1f1f1;\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .content {\\r\\n    display:block;\\r\\n    padding: 16px;\\r\\n  }\\r\\n  \\r\\n  .sticky {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .sticky + .content {\\r\\n    padding-top: 102px;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Chatbots/angular-chatbot/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid \\\">\\r\\n  <div class=\\\"header\\\" id=\\\"myHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col s12 m12\\\">\\r\\n        <h3>CHATBOT</h3>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <app-chat-dialog class=\\\"brown lighten-4\\\"></app-chat-dialog>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Chatbots/angular-chatbot/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Chatbots/angular-chatbot/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { ChatModule } from './chat/chat.module';\r\n\r\n\r\n// importing chatmodule\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ChatModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Chatbots/angular-chatbot/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".message {\\r\\n    border-radius: 50px;\\r\\n    margin: 0 15px 10px;\\r\\n    padding: 15px 20px;\\r\\n    position: relative;\\r\\n    font-weight: bold;\\r\\n}\\r\\n.message.to {\\r\\n    background-color: #2095FE;\\r\\n    color: #fff;\\r\\n    margin-left: 100px;\\r\\n    text-align: right;\\r\\n}\\r\\n.message.from {\\r\\n    background-color: rgb(121, 254, 32);\\r\\n    color: #363636;\\r\\n    margin-right: 100px;\\r\\n}\\r\\n.message.to + .message.to,\\r\\n.message.from + .message.from {\\r\\nmargin-top: -10px;\\r\\n}\\r\\n/* .footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    background-color: red;\\r\\n    color: white;\\r\\n    text-align: left;\\r\\n} */\\r\\nbody {\\r\\n  margin: 0;\\r\\n  font-family: Arial;\\r\\n}\\r\\n\\r\\n.header {\\r\\n  padding: 5px 8px;\\r\\n  background: #555;\\r\\n  color: #f1f1f1;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.content {\\r\\n  display:block;\\r\\n  padding: 16px;\\r\\n}\\r\\n\\r\\n.sticky {\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.sticky + .content {\\r\\n  padding-top: 102px;\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Chatbots/angular-chatbot/src/app/chat/chat-dialog/chat-dialog.component.css\n// module id = ../../../../../src/app/chat/chat-dialog/chat-dialog.component.css\n// module chunks = main","module.exports = \"<!-- <div class=\\\"container deep-orange lighten-1\\\"> -->\\r\\n<div class=\\\"content\\\"  style=\\\"overflow:scroll; height:400px;overflow-x: hidden;\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col s8 m6 offset-s2 offset-m3\\\" >\\r\\n      <ng-container *ngFor=\\\"let message of messages | async\\\">\\r\\n        <div class=\\\"message\\\" [ngClass]=\\\"{'from':message.sentBY === 'bot','to':message.sentBy === 'user'}\\\">\\r\\n          {{message.content}}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"footer\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col s9 m9 offset-s1 offset-m1\\\">\\r\\n      <label for=\\\"nameField\\\">Your Message</label>\\r\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"formValue\\\" (keyup.enter)=\\\"sendMessage()\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col s1 m1\\\">\\r\\n      <button class=\\\"btn-floating btn-large red\\\" (click)=\\\"activateSpeechSearch()\\\" [disabled]=\\\"!showSearchButton\\\">\\r\\n         <i class=\\\"large material-icons\\\">mic</i>\\r\\n       </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <div class=\\\"header\\\" id=\\\"myHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col s12 m12\\\">\\r\\n          <h1>CHATBOT</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content\\\">\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col s8 m6 offset-s2 offset-m3\\\">\\r\\n    <ng-container *ngFor=\\\"let message of messages | async\\\">\\r\\n      <div class=\\\"message\\\" [ngClass]=\\\"{'from':message.sentBY === 'bot','to':message.sentBy === 'user'}\\\">\\r\\n        {{message.content}}\\r\\n      </div>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"footer\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col s9 m9 offset-s1 offset-m1\\\">\\r\\n      <label for=\\\"nameField\\\">Your Message</label>\\r\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"formValue\\\" (keyup.enter)=\\\"sendMessage()\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col s1 m1\\\">\\r\\n      <button class=\\\"btn-floating btn-large red\\\" (click)=\\\"activateSpeechSearch()\\\" [disabled]=\\\"!showSearchButton\\\">\\r\\n        <i class=\\\"large material-icons\\\">mic</i>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Chatbots/angular-chatbot/src/app/chat/chat-dialog/chat-dialog.component.html\n// module id = ../../../../../src/app/chat/chat-dialog/chat-dialog.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ChatService, Message } from '../chat.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/scan';\r\nimport { SpeechService } from '../speech.service';\r\ndeclare const $: any;\r\n// importing dependency\r\n\r\n@Component({\r\n  selector: 'app-chat-dialog',\r\n  templateUrl: './chat-dialog.component.html',\r\n  styleUrls: ['./chat-dialog.component.css']\r\n})\r\n\r\nexport class ChatDialogComponent implements OnInit, OnDestroy {\r\n  showSearchButton: boolean;\r\n  speechData: string;\r\n  messages: Observable<Message[]>;\r\n  formValue: string;\r\n\r\n\r\n\r\n  constructor(public chat: ChatService, private speechService: SpeechService) {\r\n    this.showSearchButton = true;\r\n    this.speechData = '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    // appends to array after each new message is added to feedSource\r\n    this.messages = this.chat.conversation.asObservable()\r\n      .scan(((acc, val) => acc.concat(val)));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.speechService.DestroySpeechObject();\r\n  }\r\n\r\n  sendMessage() {\r\n    this.chat.converse(this.formValue);\r\n    console.log(this.formValue);\r\n    this.formValue = '';\r\n  }\r\n\r\n  activateSpeechSearch(): void {\r\n    this.showSearchButton = false;\r\n\r\n    this.speechService.record()\r\n      .subscribe(\r\n      // listener\r\n      (value) => {\r\n        this.speechData = value;\r\n        this.formValue = this.speechData;\r\n        this.sendMessage();\r\n        console.log(value);\r\n      },\r\n      // errror\r\n      (err) => {\r\n        console.log(err);\r\n        if (err.error === 'no-speech') {\r\n          console.log('--restatring service--');\r\n          this.activateSpeechSearch();\r\n        }\r\n      },\r\n      // completion\r\n      () => {\r\n        this.showSearchButton = true;\r\n        console.log('--complete--');\r\n        // this.activateSpeechSearch();\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Chatbots/angular-chatbot/src/app/chat/chat-dialog/chat-dialog.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n// importing forms module\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ChatDialogComponent } from './chat-dialog/chat-dialog.component';\r\nimport { ChatService } from './chat.service';\r\nimport { SpeechService } from './speech.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n\r\n  ],\r\n  declarations: [ChatDialogComponent],\r\n  // exporting chatdialogcomponent\r\n  exports: [ChatDialogComponent],\r\n  providers: [ChatService, SpeechService]\r\n})\r\nexport class ChatModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Chatbots/angular-chatbot/src/app/chat/chat.module.ts","import { Injectable } from '@angular/core';\r\n// importing dependencies\r\nimport { environment } from '../../environments/environment';\r\nimport { ApiAiClient } from 'api-ai-javascript';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\n\r\n\r\n// Message class for displaying messages in the component\r\nexport class Message {\r\n  constructor(public content: string, public sentBy: string) { }\r\n}\r\n\r\n@Injectable()\r\nexport class ChatService {\r\n  readonly token = environment.dialogflow.angularBot;\r\n  readonly client = new ApiAiClient({ accessToken: this.token });\r\n  conversation = new BehaviorSubject<Message[]>([]);\r\n\r\n  constructor() { }\r\n\r\n  // Sends and receives messages via DialogFlow\r\n  converse(msg: string) {\r\n    const userMessage = new Message(msg, 'user');\r\n    this.update(userMessage);\r\n    console.log(this.token);\r\n    return this.client.textRequest(msg)\r\n      .then(res => {\r\n        const speech = res.result.fulfillment.speech;\r\n        const botMessage = new Message(speech, 'bot');\r\n        this.update(botMessage);\r\n      });\r\n  }\r\n\r\n  // Adds message to source\r\n  update(msg: Message) {\r\n    this.conversation.next([msg]);\r\n    console.log(this.token);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Chatbots/angular-chatbot/src/app/chat/chat.service.ts","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport * as _ from 'lodash';\r\n\r\ninterface IWindow extends Window {\r\n  webkitSpeechRecognition: any;\r\n  SpeechRecognition: any;\r\n}\r\n\r\n@Injectable()\r\nexport class SpeechService {\r\n  speechRecognition: any;\r\n  constructor(private zone: NgZone) { }\r\n  record(): Observable<string> {\r\n\r\n    return Observable.create(observer => {\r\n      const { webkitSpeechRecognition }: IWindow = <IWindow>window;\r\n      this.speechRecognition = new webkitSpeechRecognition();\r\n      this.speechRecognition.continuous = true;\r\n      // this.speechRecognition.interimResults = true;\r\n      this.speechRecognition.lang = 'en-us';\r\n      this.speechRecognition.maxAlternatives = 1;\r\n\r\n      this.speechRecognition.onresult = speech => {\r\n        let term: string = '';\r\n        if (speech.results) {\r\n          var result = speech.results[speech.resultIndex];\r\n          var transcript = result[0].transcript;\r\n          if (result.isFinal) {\r\n            if (result[0].confidence < 0.3) {\r\n              console.log('Unrecognized result - Please try again');\r\n            } else {\r\n              term = _.trim(transcript);\r\n              console.log('Did you said? -> ' + term + ' , If not then say something else...');\r\n            }\r\n          }\r\n        }\r\n        this.zone.run(() => {\r\n          observer.next(term);\r\n        });\r\n      };\r\n\r\n      this.speechRecognition.onerror = error => {\r\n        observer.error(error);\r\n      };\r\n\r\n      this.speechRecognition.onend = () => {\r\n        observer.complete();\r\n      };\r\n\r\n      this.speechRecognition.start();\r\n      console.log('Say something - We are listening !!!');\r\n    });\r\n  }\r\n\r\n  DestroySpeechObject() {\r\n    if (this.speechRecognition) {\r\n      this.speechRecognition.stop();\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Chatbots/angular-chatbot/src/app/chat/speech.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n\r\n  dialogflow: {\r\n    angularBot: '734d75343a474dec864092239fb3b383'\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Chatbots/angular-chatbot/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Chatbots/angular-chatbot/src/main.ts"],"sourceRoot":"webpack:///"}